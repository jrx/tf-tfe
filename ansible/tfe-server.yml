---
- name: install tfe server
  hosts: all
  serial: 1
  become: true

  vars:
    NODE_NAME: "tfe-Server"
    PRIVATE_ADDR: "127.0.0.1"
    PUBLIC_ADDR: "127.0.0.1"
    HOSTNAME: "server.company.com"
    RELEASE_SEQUENCE: 0
    ADMIN_PASSWORD: "admin"
    ENC_PASSWORD: "admin"
    DATABASE_NAME: "mydatabase"
    DATABASE_ENDPOINT: "db.company.com"
    DATABASE_PASSWORD: "admin"
    DATABASE_USERNAME: "admin"
    S3_BUCKET: "mybucket"
    S3_REGION: "eu-central-1"

  tasks:

  - name: install epel-release
    yum:
      name: epel-release
      state: present

  - name: install common packages
    yum:
      name:
        - unzip
        - vim
        - jq
      state: present

  - name: disable selinux
    selinux:
      policy: targeted
      state: permissive

  - name: enable docker repo
    yum_repository:
      name: docker-ce
      description: Docker CE Repository
      baseurl: "https://download.docker.com/linux/centos/7/$basearch/stable"
      enabled: yes
      gpgcheck: yes
      gpgkey: https://download.docker.com/linux/centos/gpg

  - name: preinstall containerd
    yum:
      name: containerd.io-1.2.6
      update_cache: true
      state: present

  - name: install docker
    yum:
      name: "docker-ce-18.09.2"
      update_cache: true
      state: present
    register: yum_docker_install
    until: yum_docker_install is success
    retries: 3
    delay: 60

  - name: enable docker
    systemd:
      name: docker
      state: started
      enabled: true

  - name: ensure docker group exists
    group:
      name: docker
      state: present

  - name: create install directory
    file: 
      path: /opt/tfe-installer/
      state: directory

  - name: check if replicated is installed
    stat: 
      path: /etc/systemd/system/replicated.service
    register: replicated_service

  - name: configure replicated
    template:
      src: ./files/replicated.conf.j2
      dest: /etc/replicated.conf
      mode: 0755
      owner: root
      group: root
    notify:
      - restart replicated

  - name: configure tfe
    template:
      src: ./files/settings.conf.j2
      dest: /opt/tfe-installer/settings.conf
      mode: 0755
      owner: root
      group: root
    notify:
      - restart replicated

  - name: set license file
    copy:
      src: ./files/license.rli
      dest: /opt/tfe-installer/license.rli
      mode: 0755
      owner: root
      group: root
    notify:
      - restart replicated

  - name: download install file
    unarchive:
      src: "https://install.terraform.io/airgap/latest.tar.gz"
      dest: /opt/tfe-installer/
      remote_src: yes
      mode: 0755
      owner: root
      group: root
    when: replicated_service.stat.exists == false

  - name: start replicated installer
    shell: 
      cmd: "./install.sh no-proxy private-address={{ PRIVATE_ADDR }} public-address={{ PUBLIC_ADDR }}"
      chdir: /opt/tfe-installer/
    when: replicated_service.stat.exists == false

  handlers:

  - name: restart replicated
    systemd:
      name: replicated.service
      state: restarted
      enabled: yes
      daemon_reload: yes
    when: replicated_service.stat.exists == true